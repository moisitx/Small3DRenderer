name: Java CI with Maven and Launch4j

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest  # Windows runner for .exe generation

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml  # Builds the project using Maven

    # Step 1: Build .exe with Launch4j Maven plugin (this step happens during the Maven build)
    - name: Generate .exe with Launch4j
      run: mvn launch4j:launch4j  # Invokes the Launch4j plugin to wrap the JAR into .exe

    # Step 2: Upload the .exe file as an artifact (optional)
    - name: Upload .exe file as artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-app-exe
        path: target/my-app.exe  # Adjust to the actual output path of your .exe file

    # Optional: Step 3: Create a GitHub release and upload .exe (for easy sharing)
    - name: Create GitHub release and upload .exe
      uses: softprops/action-gh-release@v1
      with:
        files: target/my-app.exe  # Adjust to the actual output path of your .exe file
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
